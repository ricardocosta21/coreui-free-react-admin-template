version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.1.0
  aws-cli: circleci/aws-cli@0.1.4
workflows:
  build-and-deploy:
    jobs:
      # - aws-ecr/build-and-push-image:
      #     account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
      #     aws-access-key-id: ACCESS_KEY_ID
      #     aws-secret-access-key: SECRET_ACCESS_KEY
      #     repo: supermarketclient 
      #     region: AWS_REGION
      #     tag: 'latest'
      - update-tag:
          docker:
            - image: 'circleci/python:3.7.1'
          steps:
            - aws-cli/install
            - aws-cli/configure:
                aws-access-key-id: $AWS_ACCESS_KEY_ID
                aws-region: $AWS_REGION
            - aws-ecs/update-task-definition-from-json:
                task-definition-json: ecs-task-def.json

      - aws-ecs/deploy-service-update:
          # requires:
          #   - aws-ecr/build-and-push-image # only run this job once aws-ecr/build-and-push-image has completed
          # aws-access-key-id: ACCESS_KEY_ID
          # aws-secret-access-key: SECRET_ACCESS_KEY  
          family: 'ecs-service-1'
          cluster-name: 'ecs-cluster-1'
          container-image-name-updates: "container='ecs-service-1',tag='latest'"


# version: 2.1
# orbs:
#   aws-cli: circleci/aws-cli@1.0.0
#   aws-ecr: circleci/aws-ecr@6.12.2
#   aws-ecs: circleci/aws-ecs@1.1.0
# workflows:
#   build-and-deploy:
#     jobs:
#       - cmd_ecs_verify_deployment:
#         description: Verifies the deployed updated service
#         steps:
#           - aws-cli/setup:
#               aws-access-key-id: ACCESS_KEY_ID
#               aws-region: AWS_REGION
#           - run:
#               name: Get last task definition
#               command: >
#                 TASK_DEFINITION_ARN=$(aws ecs describe-task-definition \
#                     --task-definition ${CIRCLE_PROJECT_REPONAME} \
#                     --output text \
#                     --query 'taskDefinition.taskDefinitionArn')
#                 echo "export TASK_DEFINITION_ARN='${TASK_DEFINITION_ARN}'" >>
#                 $BASH_ENV
#           - aws-ecs/verify-revision-is-deployed:
#               family: ecs-service-1
#               cluster-name: ecs-cluster-1
#               task-definition-arn: '${TASK_DEFINITION_ARN}'

      # - cmd_ecs_deploy:
      #   description: Deploys a new task definition to ECS
      #   steps:
      #     - aws-cli/setup:
      #         aws-access-key-id: ACCESS_KEY_ID
      #         aws-region: AWS_REGION
      #     - aws-ecs/update-service:
      #         family: ecs-service-1
      #         cluster-name: ecs-cluster-1
      #         container-image-name-updates: 'container=${CIRCLE_PROJECT_REPONAME},tag=${CIRCLE_SHA1}'






# version: 2.1
# orbs:
#   aws-cli: circleci/aws-cli@1.0.0
#   aws-ecr: circleci/aws-ecr@6.12.2
#   aws-ecs: circleci/aws-ecs@1.1.0
# workflows:
#   build-and-deploy:
#     jobs:
      # - aws-ecr/build-and-push-image:
      #     account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
      #     aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
      #     aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
      #     repo: supermarketclient
      #     region: AWS_REGION_ENV_VAR_NAME
      #     tag: 'latest'

      # - aws-ecs/deploy-service-update:
      #     # requires:
      #     #   - aws-ecr/build-and-push-image
      #     aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
      #     aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
      #     family: "ecs-service-1"
      #     cluster-name: "ecs-cluster-1"
      #     container-image-name-updates: "container=ecs-service-1,tag=2"


#
# orbs:
#   aws-ecr: circleci/aws-ecr@6.12.2
# version: 2.1

# workflows:
#   build_and_push_image:
#     jobs:
#       - aws-ecr/build-and-push-image:
#           account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
#           aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
#           aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
#           create-repo: true
#           dockerfile: Dockerfile
#           no-output-timeout: 20m
#           path: .
#           profile-name: default
#           region: AWS_REGION_ENV_VAR_NAME
#           repo: supermarketclient
#           skip-when-tags-exist: false
#           tag: 'latest'

