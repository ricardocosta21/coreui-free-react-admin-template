version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.4
  aws-ecs: circleci/aws-ecs@1.0.5
jobs:
  update-tag:
    docker:
      - image: "circleci/python:3.7.1"
    steps:
      - aws-cli/install
      - aws-cli/configure:
        aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
        aws-region: AWS_REGION_ENV_VAR_NAME
      - aws-ecs/update-task-definition-from-json:
          task-definition-json: ecs-task-def.json
# version: 2.1
# orbs:
#   aws-cli: circleci/aws-cli@0.1.4
#   aws-ecr: circleci/aws-ecr@6.5.0
#   aws-ecs: circleci/aws-ecs@0.0.10
# workflows:
#   build_and_push_image:
#     jobs:
#       # - aws-ecr/build-and-push-image:
#       #     account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
#       #     aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
#       #     aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
#       #     repo: supermarketclient
#       #     region: AWS_REGION_ENV_VAR_NAME
#       #     tag: "latest"

#       - aws-ecs/update-task-definition-from-json:
#           task-definition-json: ecs-task-def.json

#       - aws-ecs/deploy-service-update:
#           # requires:
#           #   - aws-ecr/build-and-push-image
#           aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
#           aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
#           aws-region: AWS_DEFAULT_REGION
#           family: "ecs-service-1"
#           cluster-name: "ecs-cluster-1"
#           container-image-name-updates: "container=ecs-service-1,tag=latest"
# orbs:
#   aws-ecr: circleci/aws-ecr@6.12.2
# version: 2.1

# workflows:

#   build_and_push_image:
#     jobs:

#       - aws-ecr/build-and-push-image:
#           account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
#           aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
#           aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
#           create-repo: true
#           dockerfile: Dockerfile
#           no-output-timeout: 20m
#           path: .
#           profile-name: default
#           region: AWS_REGION_ENV_VAR_NAME
#           repo: supermarketclient
#           skip-when-tags-exist: false
#           tag: 'latest'
