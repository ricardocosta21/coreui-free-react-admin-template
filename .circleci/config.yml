docker:
    - image: circleci/python:3.6.1

steps:
    - checkout
    - setup_remote_docker

    - run:
        name: Install AWScli
        command: pip install awscli --upgrade --user

    # - run:
    #     name: Build Docker image
    #     command: docker build -t $CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 .

    # - run:
    #     name: Push Docker image to ECR
    #     command: |
    #     eval $(python -m awscli ecr get-login --region us-west-2)
    #     docker tag $CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
    #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1

    - run:
        name: Update task definition and service in ECS
        command: |
        
        containers=$(printf '[
            {
            "name": "web",
            "image": "%s.dkr.ecr.%s.amazonaws.com/%s:%s",
            "portMappings": [
                {
                "protocol": "tcp",
                "containerPort": 5000,
                "hostPort": 0
                }
            ],
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                "awslogs-region": "%s",
                "awslogs-stream-prefix": "ecs",
                "awslogs-group": "/ecs/%s"
                }
            },
            "memory": 128,
            "essential": true
            }
        ]' $AWS_ACCOUNT_ID $AWS_REGION $CIRCLE_PROJECT_REPONAME $CIRCLE_SHA1 $AWS_REGION $AWS_ECS_TASK_NAME)

        echo "$containers"

        task_definition=$(python -m awscli ecs register-task-definition --container-definitions "$containers" --family $AWS_ECS_TASK_NAME --region $AWS_REGION)

        revision=$(echo $task_definition | jq '.["taskDefinition"]["revision"]')

        python -m awscli ecs update-service --cluster "$AWS_ECS_CLUSTER" --service "$AWS_ECS_SERVICE" --task-definition "$AWS_ECS_TASK_NAME":"$revision" --region $AWS_REGION


# version: 2.1
# orbs:
#   # aws-cli: circleci/aws-cli@1.0.0 
#   aws-ecr: circleci/aws-ecr@6.12.2 
#   aws-ecs: circleci/aws-ecs@1.1.0
# workflows:
#   build-and-deploy:
#     jobs:
#       # - aws-ecr/build-and-push-image:
#       #     account-url: AWS_ECR_ACCOUNT_URL
#       #     aws-access-key-id: ACCESS_KEY_ID
#       #     aws-secret-access-key: SECRET_ACCESS_KEY
#       #     repo: supermarketclient
#       #     region: AWS_REGION
#       #     tag: latest

#       - aws-ecs/deploy-service-update:
#           # requires:
#           #   - aws-ecr/build-and-push-image
#           aws-access-key-id: ACCESS_KEY_ID
#           aws-secret-access-key: SECRET_ACCESS_KEY
#           family: ecs-service-1
#           cluster-name: ecs-cluster-1
#           container-image-name-updates: 'container=${AWS_RESOURCE_NAME_PREFIX}-service,tag=${CIRCLE_SHA1}'


#
# orbs:
#   aws-ecr: circleci/aws-ecr@6.12.2
# version: 2.1

# workflows:
#   build_and_push_image:
#     jobs:
#       - aws-ecr/build-and-push-image:
#           account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
#           aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
#           aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
#           create-repo: true
#           dockerfile: Dockerfile
#           no-output-timeout: 20m
#           path: .
#           profile-name: default
#           region: AWS_REGION_ENV_VAR_NAME
#           repo: supermarketclient
#           skip-when-tags-exist: false
#           tag: 'latest'

