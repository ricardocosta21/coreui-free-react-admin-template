docker:
  - image: circleci/python:3.6.1

steps:
  - checkout
  - setup_remote_docker

  - run:
      name: Install AWScli
      command: pip install awscli --upgrade --user

  # - run:
  #     name: Build Docker image
  #     command: docker build -t $CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 .

  # - run:
  #     name: Push Docker image to ECR
  #     command: |
  #     eval $(python -m awscli ecr get-login --region us-west-2)
  #     docker tag $CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
  #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1

  - run:
      name: Update task definition and service in ECS
      command: |
      
      containers=$(printf '[
        {
          "ipcMode": null,
          "executionRoleArn": "arn:aws:iam::367495629778:role/ecsTaskExecutionRole",
          "containerDefinitions": [
            {
              "dnsSearchDomains": null,
              "environmentFiles": null,
              "logConfiguration": null,
              "entryPoint": null,
              "portMappings": [
                {
                  "hostPort": 8888,
                  "protocol": "tcp",
                  "containerPort": 80
                }
              ],
              "command": null,
              "linuxParameters": null,
              "cpu": 250,
              "environment": [],
              "resourceRequirements": null,
              "ulimits": null,
              "dnsServers": null,
              "mountPoints": [],
              "workingDirectory": null,
              "secrets": null,
              "dockerSecurityOptions": null,
              "memory": 250,
              "memoryReservation": null,
              "volumesFrom": [],
              "stopTimeout": null,
              "image": "367495629778.dkr.ecr.us-east-2.amazonaws.com/supermarketapi:latest",
              "startTimeout": null,
              "firelensConfiguration": null,
              "dependsOn": null,
              "disableNetworking": null,
              "interactive": null,
              "healthCheck": null,
              "essential": true,
              "links": null,
              "hostname": null,
              "extraHosts": null,
              "pseudoTerminal": null,
              "user": null,
              "readonlyRootFilesystem": null,
              "dockerLabels": null,
              "systemControls": null,
              "privileged": null,
              "name": "supermarketapi"
            },
            {
              "dnsSearchDomains": null,
              "environmentFiles": null,
              "logConfiguration": null,
              "entryPoint": null,
              "portMappings": [
                {
                  "hostPort": 80,
                  "protocol": "tcp",
                  "containerPort": 80
                }
              ],
              "command": null,
              "linuxParameters": null,
              "cpu": 700,
              "environment": [],
              "resourceRequirements": null,
              "ulimits": null,
              "dnsServers": null,
              "mountPoints": [],
              "workingDirectory": null,
              "secrets": null,
              "dockerSecurityOptions": null,
              "memory": 700,
              "memoryReservation": null,
              "volumesFrom": [],
              "stopTimeout": null,
              "image": "367495629778.dkr.ecr.us-east-2.amazonaws.com/supermarketclient:latest",
              "startTimeout": null,
              "firelensConfiguration": null,
              "dependsOn": null,
              "disableNetworking": null,
              "interactive": null,
              "healthCheck": null,
              "essential": true,
              "links": null,
              "hostname": null,
              "extraHosts": null,
              "pseudoTerminal": null,
              "user": null,
              "readonlyRootFilesystem": null,
              "dockerLabels": null,
              "systemControls": null,
              "privileged": null,
              "name": "supermarketclient"
            }
          ],
          "placementConstraints": [],
          "memory": null,
          "taskRoleArn": "arn:aws:iam::367495629778:role/ecsTaskExecutionRole",
          "compatibilities": [
            "EC2"
          ],
          "taskDefinitionArn": "arn:aws:ecs:us-east-2:367495629778:task-definition/ecs-task-1:3",
          "family": "ecs-task-1",
          "requiresAttributes": [
            {
              "targetId": null,
              "targetType": null,
              "value": null,
              "name": "com.amazonaws.ecs.capability.ecr-auth"
            },
            {
              "targetId": null,
              "targetType": null,
              "value": null,
              "name": "com.amazonaws.ecs.capability.task-iam-role"
            },
            {
              "targetId": null,
              "targetType": null,
              "value": null,
              "name": "ecs.capability.execution-role-ecr-pull"
            }
          ],
          "pidMode": null,
          "requiresCompatibilities": [
            "EC2"
          ],
          "networkMode": null,
          "cpu": null,
          "revision": 3,
          "status": "ACTIVE",
          "inferenceAccelerators": null,
          "proxyConfiguration": null,
          "volumes": []
        }
      ]' $AWS_ACCOUNT_ID $AWS_REGION $CIRCLE_PROJECT_REPONAME $CIRCLE_SHA1 $AWS_REGION $AWS_ECS_TASK_NAME)

      echo "$containers"

      task_definition=$(python -m awscli ecs register-task-definition --container-definitions "$containers" --family $AWS_ECS_TASK_NAME --region $AWS_REGION)

      revision=$(echo $task_definition | jq '.["taskDefinition"]["revision"]')

      python -m awscli ecs update-service --cluster "$AWS_ECS_CLUSTER" --service "$AWS_ECS_SERVICE" --task-definition "$AWS_ECS_TASK_NAME":"$revision" --region $AWS_REGION 

# version: 2.1
# orbs:
#   aws-cli: circleci/aws-cli@0.1.4
#   aws-ecs: circleci/aws-ecs@1.3.0
# jobs:
#   update-tag:
#     docker:
#       - image: 'circleci/python:3.7.1'
#     steps:
#       - aws-cli/install
#       - aws-cli/configure:
#           aws-access-key-id: $AWS_ACCESS_KEY_ID
#           aws-region: $AWS_REGION
#       - aws-ecs/update-service:
#           family: ecs-service-1
#           cluster-name: ecs-cluster-1
#           container-image-name-updates: 'container=ecs-service-1,tag=${CIRCLE_SHA1}'
# workflows:
#   deploy:
#     jobs:
#       - update-tag



# version: 2.1
# orbs:
#   # aws-cli: circleci/aws-cli@1.0.0 
#   aws-ecr: circleci/aws-ecr@6.12.2 
#   aws-ecs: circleci/aws-ecs@1.1.0
# workflows:
#   build-and-deploy:
#     jobs:
#       # - aws-ecr/build-and-push-image:
#       #     account-url: AWS_ECR_ACCOUNT_URL
#       #     aws-access-key-id: ACCESS_KEY_ID
#       #     aws-secret-access-key: SECRET_ACCESS_KEY
#       #     repo: supermarketclient
#       #     region: AWS_REGION
#       #     tag: latest

#       - aws-ecs/deploy-service-update:
#           # requires:
#           #   - aws-ecr/build-and-push-image
#           aws-access-key-id: ACCESS_KEY_ID
#           aws-secret-access-key: SECRET_ACCESS_KEY
#           family: ecs-service-1
#           cluster-name: ecs-cluster-1
#           container-image-name-updates: 'container=${AWS_RESOURCE_NAME_PREFIX}-service,tag=${CIRCLE_SHA1}'


#
# orbs:
#   aws-ecr: circleci/aws-ecr@6.12.2
# version: 2.1

# workflows:
#   build_and_push_image:
#     jobs:
#       - aws-ecr/build-and-push-image:
#           account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
#           aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
#           aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
#           create-repo: true
#           dockerfile: Dockerfile
#           no-output-timeout: 20m
#           path: .
#           profile-name: default
#           region: AWS_REGION_ENV_VAR_NAME
#           repo: supermarketclient
#           skip-when-tags-exist: false
#           tag: 'latest'

